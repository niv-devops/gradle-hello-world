# This workflow will build a Java project with Gradle, publish image to DockerHub and run it with multistage Docker.

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
      DOCKER_HUB_USER: devopsgoofy
      DOCKER_IMAGE_NAME: gradle-proj

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Increment patch version
        if: github.event_name != 'pull_request'
        id: increment_version
        run: |
          ./scripts/increment_version.sh
          
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
      - name: Build and Publish Docker image
        uses: docker/build-push-action@23c657a01f105567f668c7596ce8e5a038da2555 # V6.7.0
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ env.DOCKER_HUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.increment_version.outputs.version }}
          build-args: |
            JAR_VERSION=${{ steps.increment_version.outputs.version }}
          push: true

      - name: Push changes back to repo
        if: github.event_name != 'pull_request'
        run: ./scripts/push_to_repo.sh ${{ steps.increment_version.outputs.version }}
          
      - name: Run Docker container
        run: |
          docker run --rm --user 1001:1001 ${{ env.DOCKER_HUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.increment_version.outputs.version }}
